apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-dramatiq
  labels:
    app: dramatiq
    chart: {{ include "chart.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.deployment.dramatiq.replicas | default "1" }}
  selector:
    matchLabels:
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: dramatiq
        release: {{ .Release.Name }}
      annotations:
        # Trigger modification of deployment & restart of pods if config changes.
        checksum/config: {{ include (print $.Template.BasePath "/main-configmap.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
{{ toYaml .Values.image.secrets | indent 8 }}
      containers:
      - name: dramatiq
        args:
        - bin/dramatiq
        image: {{ .Values.image.registry }}/api:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          requests:
            memory: {{ .Values.deployment.dramatiq.resources.requests.memory | default "500Mi" }}
            cpu: {{ .Values.deployment.dramatiq.resources.requests.cpu | default "100m" }}
          limits:
            memory: {{ .Values.deployment.dramatiq.resources.limits.memory | default "1000Mi" }}
            cpu: {{ .Values.deployment.dramatiq.resources.limits.cpu | default "2000m" }}
        volumeMounts:
        - name: {{ .Values.productShortName }}-config
          mountPath: /etc/{{ .Values.productShortName }}/settings/settings.py
          subPath: settings.py
      volumes:
      - name: {{ .Values.productShortName }}-config
        configMap:
          name: {{ include "chart.fullname" . }}-{{ .Values.productShortName }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
